{"version":3,"sources":["utilities/api.js","components/Container.js","components/Jumbotron.js","App.js","reportWebVitals.js","index.js"],"names":["usersList","axios","get","Container","state","users","search","sortDirection","col","handleSearchChange","e","setState","target","value","renderUsers","filteredUsers","sort","sortUsers","map","user","index","src","image","alt","first","last","email","Date","dob","toDateString","getHeaderClassName","handleSortDirectionChange","a","b","API","then","res","userArray","data","results","name","date","picture","medium","catch","err","console","log","this","toLowerCase","filter","includes","className","onChange","type","placeholder","aria-label","aria-describedby","scope","onClick","React","Component","Jumbotron","Helmet","class","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.01aab6e0.chunk.js","sourcesContent":["import axios from \"axios\";\n\nfunction usersList() {\n  return axios.get(\"https://randomuser.me/api/?results=200&nat=US\");\n}\n\nexport default {\n  usersList\n};","import React from \"react\";\nimport \"./styles.css\";\nimport API from \"../utilities/api\";\n\nclass Container extends React.Component {\n  state = {\n    users: [],\n    search: \"\",\n    sortDirection: \"\",\n    col: \"\"\n  };\n\n  componentDidMount() {\n    API.usersList()\n      .then(res => {\n        const userArray = res.data.results.map(user => {\n          return {\n            first: user.name.first,\n            last: user.name.last,\n            email: user.email,\n            dob: user.dob.date,\n            image: user.picture.medium\n          };\n        });\n        this.setState({ users: userArray });\n      })\n      .catch(err => console.log(err));\n  }\n\n  handleSearchChange = e => {\n    this.setState({ search: e.target.value });\n  };\n\n  filteredUsers() {\n    const search = this.state.search.toLowerCase();\n    return this.state.users.filter(user => {\n      return (\n        user.first.toLowerCase().includes(search) ||\n        user.last.toLowerCase().includes(search)\n      );\n    });\n  }\n\n  renderUsers = () => {\n    return this.filteredUsers()\n      .sort(this.sortUsers)\n      .map((user, index) => {\n        return (\n          <tr key={index}>\n            <td>\n              <img src={user.image} alt=\"user\"></img>\n            </td>\n            <td>{user.first}</td>\n            <td>{user.last}</td>\n            <td>{user.email}</td>\n            <td>{new Date(user.dob).toDateString()}</td>\n          </tr>\n        );\n      });\n  };\n\n  getHeaderClassName = col => {\n    return this.state.col === col\n      ? `clickable ${this.state.sortDirection}`\n      : `clickable`;\n  };\n\n  handleSortDirectionChange = col => {\n    this.state.col === col && this.state.sortDirection === \"ascending\"\n      ? this.setState({ sortDirection: \"descending\", col: col })\n      : this.setState({ sortDirection: \"ascending\", col: col });\n  };\n\n  sortUsers = (a, b) => {\n    if (a[this.state.col] < b[this.state.col]) {\n      return this.state.sortDirection === \"ascending\" ? -1 : 1;\n    } else if (a[this.state.col] > b[this.state.col]) {\n      return this.state.sortDirection === \"ascending\" ? 1 : -1;\n    }\n    return 0;\n  };\n\n  render() {\n    return (\n      <>\n        <div className=\"input-group justify-content-center\">\n          <div className=\"input-group-prepend\"></div>\n          <input\n            onChange={this.handleSearchChange}\n            type=\"search\"\n            className=\"form-control m-3\"\n            placeholder=\"Search\"\n            aria-label=\"SearchBox\"\n            aria-describedby=\"basic-addon1\"\n          />\n        </div>\n        <div className=\"table m-3\">\n          <table className=\"table table-striped\">\n            <thead>\n              <tr>\n                <th scope=\"col\">Image</th>\n                <th scope=\"col\">\n                  <span\n                    className={this.getHeaderClassName(\"first\")}\n                    onClick={() => {\n                      this.handleSortDirectionChange(\"first\");\n                    }}\n                  >\n                    First Name\n                  </span>\n                </th>\n                <th scope=\"col\">\n                  <span\n                    className={this.getHeaderClassName(\"last\")}\n                    onClick={() => this.handleSortDirectionChange(\"last\")}\n                  >\n                    Last Name\n                  </span>\n                </th>\n                <th scope=\"col\">\n                  <span\n                    className={this.getHeaderClassName(\"email\")}\n                    onClick={() => this.handleSortDirectionChange(\"email\")}\n                  >\n                    Email Address\n                  </span>\n                </th>\n                <th scope=\"col\">\n                  <span\n                    className={this.getHeaderClassName(\"dob\")}\n                    onClick={() => this.handleSortDirectionChange(\"dob\")}\n                  >\n                    Date of Birth\n                  </span>\n                </th>\n              </tr>\n            </thead>\n            <tbody>{this.renderUsers()}</tbody>\n          </table>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Container;","import React from \"react\";\nimport \"./styles.css\";\nimport { Helmet } from 'react-helmet';\n\nconst TITLE = \"User Directory\";\n\nfunction Jumbotron() {\n  return (\n    <div>\n      <Helmet>\n        <title> {TITLE} </title>\n      </Helmet>\n    <div class=\"jumbotron jumbotron-fluid\">\n      <div class=\"container\">\n        <h1 class=\"display-4\">User Directory</h1>\n        <p class=\"lead\">\n          This is a list of your employees.\n        </p>\n      </div>\n    </div>\n    </div>\n  );\n}\nexport default Jumbotron;","import React from 'react';\nimport Container from './components/Container'\nimport Jumbotron from './components/Jumbotron';\nfunction App() {\n  return <>\n  <Jumbotron/>\n  <Container/> \n  </>\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}